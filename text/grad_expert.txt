GradExpert
Статус. В процессе разработки с 10.01.2021
#d60000
Упрощаем бизнес процессы

# Описание

GradExpert - всероссийская сервисная сеть по ремонту побитых градом автомобилей.
Необходимо было разработать приложение для специалистов компании, в котором бы они могли:

* добавлять клиентов;
* добавлять заказы;
* ввводить информацию о повреждениях и необходимых работах и получать итоговую сумму - калькуляция;
* генерировать документы с описанием заказа и ценами;
* отправлять через приложение фотографии повреждений.

# Техника подсчета

Для данного В2В приложения была разработана автоматическая система подсчета стоимости ремонта. Итоговая сумма подсчитывается исходя из множества параметров:

* марка автомобиля;
* тип кузова;
* количество и расположение вмятин;
* дополнительные и сопутствующие работы и услуги;
* договоренности со страховыми компаниями.
* Документооборот
* Удалось полностью автомотизировать документооборот в комании - все документы создаются в приложении и содержат всю введенную информацию. 
* Генерируется различные виды документы для разных инстанций. 
* Созданные файлы можно отправить по электронной почте и через любые мессенджеры.

# Документооборот

Удалось полностью автомотизировать документооборот в комании - все документы создаются в приложении и содержат всю введенную информацию.
Генерируется различные виды документы для разных инстанций.
Созданные файлы можно отправить по электронной почте и через любые мессенджеры.

# Технические особенности 

Генерация доументов на мобильной устройстве задача не из легких. Было множество вариантов - View to Pdf, Xml to Pdf, Word to Pdf, редактирование png... 
Но в итоге выбор сделан был в сторону библиотеки OpenPdf, которая позволила создавать документы с динамическим наполнением.

Для удобства пользователя была добавлена функция перелистывания страниц заказа на основе ViewPager 2. Но поскольку фрагменты имели разное наполнение, задача стала нетривиальной и вылилась в целую статью на [Хабре](https://habr.com/ru/post/544680/).

# Технологии, фреймворки и библиотеки, задействованные в проекте
 

* Kotlin Coroutines - для асинхронности и повышения скорости работы приложения
* Room - локальная база данных
* Firebase Auth - для авторизации и создания иерархии пользователей
* Firebase Storage - хранения документов и фото
* Firebase Cloud Firestore - удаленная база данных
* OpenPdf - создание документов 
* MVVM - архитектура
* Shared ViewModel - передача данных между фрагментами